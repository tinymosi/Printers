@model Printers.Models.ListModels.MovementList

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Movement.PrinterID)
    @Html.HiddenFor(model => model.Movement.BuildingOldID)
    @Html.HiddenFor(model => model.Movement.CabinetOldID)

<div class="form-horizontal">
    <h4>Movement</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.BuildingNewID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movement.BuildingNewID, Model.GetBuilding, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movement.BuildingNewID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.CabinetNewID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movement.CabinetNewID, Model.GetCabinet, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movement.CabinetNewID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.PerformerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movement.PerformerID, Model.GetPerformer, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movement.PerformerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movement.StatusID, Model.GetStatus, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movement.StatusID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.MoveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.MoveDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movement.MoveDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.IP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.IP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movement.IP, "", new { @class = "text-danger" })
        </div>
    </div>
       
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
